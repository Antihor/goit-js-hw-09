{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAxCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAGC,iBAMH,IAJA,IAAIC,EAAQC,OAAOH,EAAGI,OAAOC,SAAShB,MAAMiB,OACxCC,EAAOJ,OAAOH,EAAGI,OAAOC,SAASE,KAAKD,OACtCE,EAASL,OAAOH,EAAGI,OAAOC,SAASG,OAAOF,OAErCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDtB,EAAcsB,EAAUP,GACrBQ,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OAEhD2B,QAAQC,IAAI,uBAAwCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE3D6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOM,QACd,sBAAuCJ,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OAE/C2B,QAAQC,IAAI,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG3Da,GAASK,EAEXP,EAAGI,OAAOgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(ev) {\n  ev.preventDefault();\n\n  let delay = Number(ev.target.elements.delay.value);\n  let step = Number(ev.target.elements.step.value);\n  let amount = Number(ev.target.elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n  ev.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","delay1","Number","target","elements","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.555ce889.js.map"}